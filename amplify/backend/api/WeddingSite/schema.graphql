type Wedding @model @auth(rules: [{allow: owner, ownerField: "authorizedUsers", operations: [read, create, update, delete]}]) {
  id: ID!
  name: String
  Households: [Household] @hasMany(indexName: "byWedding", fields: ["id"])
  Guests: [Guest] @hasMany(indexName: "byWedding", fields: ["id"])
  authorizedUsers: [String]
}

type Household @model @auth(rules: [{allow: owner, ownerField: "authorizedUsers", operations: [read, create, update, delete]}]) {
  id: ID!
  Guests: [Guest] @hasMany(indexName: "byHousehold", fields: ["id"])
  addressLine1: String
  addressLine2: String
  city: String
  state: String
  zipcode: String
  weddingID: ID @index(name: "byWedding")
  authorizedUsers: [String]
}

type Guest @model @auth(rules: [{allow: owner, ownerField: "authorizedUsers", operations: [read, create, update, delete]}]) {
  id: ID!
  prefix: String
  firstName: String
  lastName: String
  suffix: String
  householdId: ID @index(name: "byHousehold")
  hasPlusOne: Boolean
  withBride: Boolean
  weddingID: ID @index(name: "byWedding")
  authorizedUsers: [String]
}
 